import groovy.json.JsonOutput

/**
A helper Groovy class containing method to export workflow parameters
*/

class JsonWorkflowParamExporter {
    /**
    Function saving workflow parameters to JSON file (params.json) in an output directory
    
    @param passed_params_map    map of parameters passed to a workflow by a user
    @param params_map_full      parameter map generated by paramsSummaryMap from nf-schema plugin
    @param workflow_metadata    a WorkflowMetadata object (info: e.g. workflow duration)
    @param nextflow_version     Nextflow version (property from Nextflow metadata object)
    @param idat_count           Number of IDAT files

    @return formated JSON string
    */
    public static String toJSON(passed_params_map, params_map_full, workflow_metadata, nextflow_version, idat_count) {
        def params_map_flattened = passed_params_map
        params_map_flattened['Container_engine'] = params_map_full['Core Nextflow options']['containerEngine']
        params_map_flattened['Container_R'] = params_map_full['Core Nextflow options']['container']['withLabel:r']
        params_map_flattened['Container_Python'] = params_map_full['Core Nextflow options']['container']['withLabel:python']
        params_map_flattened['Nextflow_version'] = nextflow_version
        params_map_flattened['IDAT_count'] = idat_count
        params_map_flattened['Workflow_start'] = workflow_metadata.start
        params_map_flattened.remove('container')
        params_map_flattened['Workflow_duration'] = workflow_metadata.duration
        params_map_flattened['Workflow_complete'] = workflow_metadata.complete
        params_map_flattened['Workflow_success'] = workflow_metadata.success
        params_map_flattened['Workflow_errMsg'] = workflow_metadata.errorMessage
        params_map_flattened['Workflow_errDetails'] = workflow_metadata.errorReport
        params_map_flattened['Workflow_exitStatus'] = workflow_metadata.exitStatus
        params_map_flattened['Workflow_cmdLine'] = workflow_metadata.commandLine

        def json_params = JsonOutput.toJson(params_map_flattened)
        JsonOutput.prettyPrint(json_params)
    }
}